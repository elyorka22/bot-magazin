import { Context } from 'telegraf'
import { OrderService } from '../services/orderService'
import { ProductService } from '../services/productService'
import { MessageFormatter } from '../utils/messageFormatter'

export class CommandHandlers {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
  static async handleStart(ctx: Context) {
    const welcomeMessage = `
üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω "–ú—É–∂—Å–∫–æ–π —Å—Ç–∏–ª—å"!*

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
üõç –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã
üì¶ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã
üí¨ –ü–æ–ª—É—á–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
    `

    await ctx.reply(welcomeMessage, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', web_app: { url: process.env.MINI_APP_URL! } }
          ],
          [
            { text: 'üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã', callback_data: 'my_orders' },
            { text: 'üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data: 'support' }
          ],
          [
            { text: '‚ÑπÔ∏è –û –º–∞–≥–∞–∑–∏–Ω–µ', callback_data: 'about' }
          ]
        ]
      }
    })
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
  static async handleHelp(ctx: Context) {
    const helpMessage = `
üìã *–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞*

*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/orders - –ú–æ–∏ –∑–∞–∫–∞–∑—ã
/support - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π

*–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑:*
1. –ù–∞–∂–º–∏—Ç–µ "üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω"
2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã
3. –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
4. –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑
5. –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

*–û–ø–ª–∞—Ç–∞:* –ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏

*–î–æ—Å—Ç–∞–≤–∫–∞:* –ö—É—Ä—å–µ—Ä–æ–º –∏–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑
    `

    await ctx.reply(helpMessage, { parse_mode: 'Markdown' })
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /orders
  static async handleOrders(ctx: Context) {
    try {
      const userId = ctx.from?.id
      if (!userId) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        return
      }

      const orders = await OrderService.getUserOrders(userId)
      const message = MessageFormatter.formatOrdersList(orders)

      await ctx.reply(message, {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              { text: 'üõç –°–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑', web_app: { url: process.env.MINI_APP_URL! } }
            ],
            [
              { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }
            ]
          ]
        }
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:', error)
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤')
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /support
  static async handleSupport(ctx: Context) {
    const supportMessage = `
üìû *–ü–æ–¥–¥–µ—Ä–∂–∫–∞*

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å:

*–¢–µ–ª–µ—Ñ–æ–Ω:* +7 (XXX) XXX-XX-XX
*Email:* support@example.com
*–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:* –ü–Ω-–ü—Ç 9:00-18:00

–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –ø—Ä—è–º–æ –∑–¥–µ—Å—å, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
    `

    await ctx.reply(supportMessage, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }
          ]
        ]
      }
    })
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
  static async handleAbout(ctx: Context) {
    const aboutMessage = `
üè™ *–û –º–∞–≥–∞–∑–∏–Ω–µ "–ú—É–∂—Å–∫–æ–π —Å—Ç–∏–ª—å"*

–ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –º—É–∂—Å–∫–æ–π –æ–¥–µ–∂–¥–µ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞—Ö.

*–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*
‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω
‚úÖ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
‚úÖ –£–¥–æ–±–Ω–∞—è –æ–ø–ª–∞—Ç–∞
‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞

*–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:*
üëï –§—É—Ç–±–æ–ª–∫–∏ –∏ —Ä—É–±–∞—à–∫–∏
üëñ –î–∂–∏–Ω—Å—ã –∏ –±—Ä—é–∫–∏
üß• –ö—É—Ä—Ç–∫–∏ –∏ –ø–∞–ª—å—Ç–æ
üèÉ –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞
üëü –û–±—É–≤—å
üé© –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã

*–ö–æ–Ω—Ç–∞–∫—Ç—ã:*
üìç –ê–¥—Ä–µ—Å: —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
üåê –°–∞–π—Ç: example.com
    `

    await ctx.reply(aboutMessage, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üõç –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', web_app: { url: process.env.MINI_APP_URL! } }
          ],
          [
            { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }
          ]
        ]
      }
    })
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  static async handleStats(ctx: Context) {
    const adminChatId = process.env.ADMIN_CHAT_ID
    const userId = ctx.from?.id

    if (userId?.toString() !== adminChatId) {
      await ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
      return
    }

    try {
      const stats = await OrderService.getOrderStats()
      if (!stats) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏')
        return
      }

      const message = MessageFormatter.formatStats(stats)
      await ctx.reply(message, { parse_mode: 'Markdown' })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error)
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏')
    }
  }
} 